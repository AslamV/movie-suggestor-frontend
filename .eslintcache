[{"E:\\project\\MERN\\movies suggestion\\client\\src\\index.js":"1","E:\\project\\MERN\\movies suggestion\\client\\src\\App.js":"2","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Home.js":"3","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Navbar\\Navbar.js":"4","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Discover.js":"5","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Row\\Row.js":"6","E:\\project\\MERN\\movies suggestion\\client\\src\\api\\api.js":"7","E:\\project\\MERN\\movies suggestion\\client\\src\\api\\request.js":"8","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Form\\Form.js":"9","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Form\\style.js":"10","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Row\\Pop\\Pop.js":"11","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\auth\\Auth.js":"12","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\auth\\style.js":"13","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\auth\\Input.js":"14","E:\\project\\MERN\\movies suggestion\\client\\src\\actions\\auth.js":"15","E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\index.js":"16","E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\auth.js":"17","E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\post.js":"18","E:\\project\\MERN\\movies suggestion\\client\\src\\actions\\posts.js":"19","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\Posts.js":"20","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\SinglePost.js":"21","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\Comments.js":"22","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\Profile.js":"23","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\PInfo.js":"24","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\PData.js":"25","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\MyPosts.js":"26","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\MyFavourites.js":"27","E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\favMovie.js":"28","E:\\project\\MERN\\movies suggestion\\client\\src\\actions\\favMovi.js":"29","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Banner\\Banner.js":"30","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Genre Selector\\Genre.js":"31","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Snackbar.js":"32","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\style.js":"33"},{"size":506,"mtime":1612067892018,"results":"34","hashOfConfig":"35"},{"size":901,"mtime":1612197041616,"results":"36","hashOfConfig":"35"},{"size":853,"mtime":1612197041616,"results":"37","hashOfConfig":"35"},{"size":4997,"mtime":1612520852359,"results":"38","hashOfConfig":"35"},{"size":1140,"mtime":1612517168558,"results":"39","hashOfConfig":"35"},{"size":3072,"mtime":1612518897691,"results":"40","hashOfConfig":"35"},{"size":1283,"mtime":1612583795340,"results":"41","hashOfConfig":"35"},{"size":1162,"mtime":1612517059840,"results":"42","hashOfConfig":"35"},{"size":2019,"mtime":1612503991828,"results":"43","hashOfConfig":"35"},{"size":447,"mtime":1612009343656,"results":"44","hashOfConfig":"35"},{"size":4064,"mtime":1612581466538,"results":"45","hashOfConfig":"35"},{"size":5737,"mtime":1612276704626,"results":"46","hashOfConfig":"35"},{"size":666,"mtime":1612015600864,"results":"47","hashOfConfig":"35"},{"size":1015,"mtime":1612500989696,"results":"48","hashOfConfig":"35"},{"size":892,"mtime":1612242208081,"results":"49","hashOfConfig":"35"},{"size":198,"mtime":1612246373314,"results":"50","hashOfConfig":"35"},{"size":599,"mtime":1612242598663,"results":"51","hashOfConfig":"35"},{"size":727,"mtime":1612091598751,"results":"52","hashOfConfig":"35"},{"size":1490,"mtime":1612197014854,"results":"53","hashOfConfig":"35"},{"size":1061,"mtime":1612521874656,"results":"54","hashOfConfig":"35"},{"size":4192,"mtime":1612451888316,"results":"55","hashOfConfig":"35"},{"size":982,"mtime":1612522008265,"results":"56","hashOfConfig":"35"},{"size":523,"mtime":1612238311187,"results":"57","hashOfConfig":"35"},{"size":480,"mtime":1612262741739,"results":"58","hashOfConfig":"35"},{"size":2009,"mtime":1612176851677,"results":"59","hashOfConfig":"35"},{"size":539,"mtime":1612259825329,"results":"60","hashOfConfig":"35"},{"size":1958,"mtime":1612496517838,"results":"61","hashOfConfig":"35"},{"size":376,"mtime":1612246375193,"results":"62","hashOfConfig":"35"},{"size":732,"mtime":1612246756806,"results":"63","hashOfConfig":"35"},{"size":1581,"mtime":1612581333224,"results":"64","hashOfConfig":"35"},{"size":1760,"mtime":1612343458216,"results":"65","hashOfConfig":"35"},{"size":786,"mtime":1612503950762,"results":"66","hashOfConfig":"35"},{"size":208,"mtime":1612503560936,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1twjgk0",{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"E:\\project\\MERN\\movies suggestion\\client\\src\\index.js",[],["152","153"],"E:\\project\\MERN\\movies suggestion\\client\\src\\App.js",["154","155","156"],"import React, { useState } from 'react';\r\nimport {Switch,BrowserRouter,Route} from 'react-router-dom'\r\nimport {Container,Grid} from '@material-ui/core'\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Discover from './components/Discover/Discover'\r\nimport Home from './components/home/Home'\r\nimport Auth from './components/auth/Auth';\r\nimport Profile from './components/Profile/Profile';\r\nimport  './app.css'\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Navbar/>\r\n            </div>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/movies\" exact component={Discover}/>\r\n                <Route path=\"/auth\" exact component={Auth}/>\r\n                <Route path='/profile' exact component={Profile}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Home.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import React, { useState } from 'react'\r\nimport {Card,Avatar,Container,Grid,Grow,CardHeader,CardActions,IconButton,CardMedia,CardContent,Typography,TextField,InputAdornment,Paper,Collapse} from '@material-ui/core'\r\nimport './home.css'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Form from './Form/Form'\r\nimport Posts from './Posts../Posts'\r\nconst Home = () => {\r\n    \r\n    return (\r\n        <Grow in>\r\n        <Container>\r\n            <Grid style={{flexDirection:'row'}} container justify='space-between' alignItems='stretch' spacing={4}>\r\n                <Grid item xs={12} sm={7}>\r\n                    <Posts/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4}>\r\n                    <Form/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        </Grow> \r\n    )\r\n}\r\n\r\nexport default Home\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Navbar\\Navbar.js",["171","172","173","174","175","176","177","178","179"],"import React, { useState, useEffect } from 'react';\r\nimport { Search } from '@material-ui/icons'\r\nimport logo from '../../images/logo.png';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport './nav.css'\r\nimport decode from 'jwt-decode'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Avatar, Badge, Button, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nconst Navbar = () => {\r\n    const [query, setquery] = useState('')\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\r\n    const API = 'ce4ff5cff7053adedff9bb09f9ff4b23'\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const handleSearch = () => {\r\n        const { data } = axios.get('http://api.themoviedb.org/3/discover/movie?api_key=ce4ff5cff7053adedff9bb09f9ff4b23')\r\n        console.log(data);\r\n    }\r\n    const StyledBadge = withStyles((theme) => ({\r\n        badge: {\r\n            backgroundColor: '#44b700',\r\n            color: '#44b700',\r\n            boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n            '&::after': {\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                borderRadius: '50%',\r\n                animation: '$ripple 1.2s infinite ease-in-out',\r\n                border: '1px solid currentColor',\r\n                content: '\"\"',\r\n            },\r\n        },\r\n        '@keyframes ripple': {\r\n            '0%': {\r\n                transform: 'scale(.8)',\r\n                opacity: 1,\r\n            },\r\n            '100%': {\r\n                transform: 'scale(2.4)',\r\n                opacity: 0,\r\n            },\r\n        },\r\n    }))(Badge);\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n      }));\r\n    useEffect(() => {\r\n        const token = user?.token\r\n        if (token) {\r\n            const decodedToken = decode(token)\r\n\r\n            if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n        setUser(JSON.parse(localStorage.getItem('profile')))\r\n    }, [location])\r\n    const logout = () => {\r\n        dispatch({ type: 'LOGOUT' })\r\n        history.push('/')\r\n        setUser(null)\r\n    }\r\n    const currentTab = (history, path) => {\r\n        if (history.location.pathname === path) {\r\n            return { backgroundColor: '#58585821' };\r\n        } else {\r\n            return { backgroundColor: '' };\r\n        }\r\n    };\r\n    return (\r\n       <div>\r\n            <ul className='nav bg-light'>\r\n                <div className='nav-tab d-flex'>\r\n                <li className=\"nav-item mt-1\">\r\n                    <Link to='/' className='nav-link'>\r\n                        <h4 className='titlesss'>FLIXTER</h4>\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item mt-2\">\r\n                    <Link to='/' style={currentTab(history,'/')} className='nav-link'>\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item mt-2\">\r\n                    <Link to='/movies' style={currentTab(history,'/movies')} className='nav-link'>\r\n                        Discover\r\n                    </Link>\r\n                </li>\r\n                </div>\r\n                {\r\n                    user ? (\r\n                        <div className='nav-tab d-flex'>\r\n                            <li className=\"nav-item\">\r\n                            <Link to='/profile' className='nav-link'>\r\n                                <StyledBadge\r\n                                    className='mr-3'\r\n                                    overlap=\"circle\"\r\n                                    anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                    }}\r\n                                    variant=\"dot\"\r\n                                    >\r\n                            <Avatar className='mr-0' src={user.result.selectedFile}/>\r\n                        </StyledBadge>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/auth' className='nav-link mt-1'>\r\n                                <Button variant=\"outlined\" color=\"primary\" onClick={logout}>Logout</Button>\r\n                            </Link>\r\n                        </li>\r\n                        </div>\r\n                    ) : (\r\n                        <Button className='mr-2' component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Login</Button>\r\n                    )\r\n                }\r\n            </ul>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Discover.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Row\\Row.js",["180","181"],"import React, { useState, useEffect } from 'react';\r\nimport './row.css';\r\nimport {instance} from '../../../api/request';\r\nimport {CircularProgress,Button} from '@material-ui/core'\r\n// import {} from '@material-ui/icons'\r\nimport axios from 'axios';\r\nimport Pop from './Pop/Pop';\r\nconst imgUrl = 'https://image.tmdb.org/t/p/original/';\r\nexport default function Row({title,fetchUrl,isSeries}) {\r\n    const [movies, setmovies] = useState([]);\r\n    const [ifSeries, setifSeries] = useState(false)\r\n    const [genres, setgenres] = useState([])\r\n    const [loading, setloading] = useState(false)\r\n    const [mdata, setmdata] = useState([])\r\n    const [open, setopen] = useState(false);\r\n    const API = '719944d4c67075197ac4549527bf9438';\r\n    useEffect(\r\n        () => {\r\n            const fetchData = async () => {\r\n                const requestt = await instance.get(fetchUrl);\r\n                console.log(requestt)\r\n                setmovies(requestt.data.results);\r\n                setloading(!loading)\r\n                return requestt;\r\n            };\r\n            fetchData();\r\n        },\r\n        [fetchUrl]\r\n    );\r\n        const showPop = async (id) => {\r\n            setopen(!open)\r\n            if(isSeries){\r\n                setifSeries(!ifSeries)\r\n                const {data} = await axios.get(`https://api.themoviedb.org/3/tv/${id}?api_key=${API}&language=en-US`)\r\n                setmdata(data)\r\n                const gen=[]\r\n                const gene = () => data.genres.forEach(g => {\r\n                gen.push(g.name)\r\n                });\r\n                gene()\r\n                setgenres(gen)\r\n                console.log(mdata)\r\n            }\r\n            else {\r\n            const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API}&language=en-US`)\r\n            const gen=[]\r\n            const gene = () => data.genres.forEach(g => {\r\n                gen.push(g.name)\r\n            });\r\n            gene()\r\n            setgenres(gen)\r\n            setmdata(data)\r\n            }\r\n           \r\n        }\r\n    return (\r\n        <section className='row' style={{marginLeft:'10px'}}>\r\n            <h1>{title}</h1>\r\n\r\n                {\r\n                    loading ? (\r\n                        <div className='box'>\r\n            {movies.map((movie) => {\r\n                        return (\r\n                                <img\r\n                                    className={isSeries ? 'srs-poster' : 'img-poster'}\r\n                                    onClick={() => showPop(movie.id)}\r\n                                    key={movie.id}\r\n                                    src={`${imgUrl}${movie.poster_path}`}\r\n                                    alt=\"\"\r\n                                />\r\n                        )\r\n                }\r\n                )}\r\n            </div>\r\n                    ) : <CircularProgress className='d-flex justify-content-center'/> \r\n                }\r\n            {open  && (\r\n                <Pop movie={mdata} ifSeries={ifSeries}  genres={genres}/>\r\n            )}\r\n        </section>\r\n    );\r\n}","E:\\project\\MERN\\movies suggestion\\client\\src\\api\\api.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\api\\request.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Form\\Form.js",["182","183","184"],"import React, { useEffect, useState } from 'react'\r\nimport { TextField,Button,Paper,Typography,Snackbar } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyles from './style'\r\nimport { createPost } from '../../../actions/posts';\r\nimport CustomizedSnackbar from '../Snackbar';\r\nfunction Form() {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [postData, setpostData] = useState({\r\n        message:'',creatorUrl:''\r\n    })\r\n    const [loading, setloading] = useState(false)\r\n    const user = JSON.parse(localStorage.getItem('profile'))\r\n\r\n    if(!user?.result?.name) {\r\n        return (\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" align=\"center\">Please sign to create posts</Typography>\r\n            </Paper>\r\n        )\r\n    }\r\n    const clear = () => {\r\n        setpostData({message:''});\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createPost({...postData,name:user?.result?.name,creatorUrl:user?.result?.selectedFile}))\r\n        setloading(!loading)\r\n        clear();\r\n    }\r\n\r\n    return (\r\n        <Paper style={{marginTop:'15px'}} className={classes.paper}>\r\n            <CustomizedSnackbar open={loading} setOpen={setloading} message='Post created successfully.'/>\r\n            <form className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography  variant='h6'>Write a post</Typography>\r\n                <TextField\r\n                name='message'\r\n                variant='outlined'\r\n                label='Message'\r\n                fullWidth\r\n                value={postData.message}\r\n                onChange={(e) => setpostData({...postData,message:e.target.value})}\r\n                />\r\n                <Button className={classes.buttonSubmit} fullWidth variant='contained' type='submit' size=\"large\" color=\"primary\">Submit</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Form\\style.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Row\\Pop\\Pop.js",["185","186","187","188","189"],"import React, { useState,useEffect } from 'react'\r\nimport './pop.css'\r\nimport {Button} from '@material-ui/core'\r\nimport {useDispatch} from 'react-redux'\r\nimport Youtube from 'react-youtube';\r\nimport ReactPlayer from 'react-player'\r\nimport { postMovie } from '../../../../actions/favMovi'\r\nimport { fetchMovieVideos, instance } from '../../../../api/request'\r\nimport CustomizedSnackbar from '../../../home/Snackbar';\r\nconst Pop = ({ movie,genres,ifSeries }) => {\r\n    const [moviVideo, setmoviVideo] = useState('')\r\n    const [openSnack, setopenSnack] = useState(false)\r\n    const [open, setopen] = useState(false)\r\n    useEffect(() => {\r\n        const fetchVideo = async () => {\r\n            const data = await fetchMovieVideos(movie.id)\r\n            setmoviVideo(data?.key)\r\n        }\r\n        fetchVideo()\r\n    }, [movie.id])\r\n    const dispatch = useDispatch()\r\n    const user = JSON.parse(localStorage.getItem('profile'))\r\n    console.log(moviVideo)\r\n    const addFav = (name,img_path,id) => {\r\n        const movieData={\r\n            movieName:name,\r\n            movieUrl:img_path,\r\n            movieId:id,\r\n            movieGenre:genres\r\n        }\r\n        dispatch(postMovie(movieData))\r\n        setopenSnack(!openSnack)\r\n    }\r\n    const opts = {\r\n\t\theight: '390',\r\n\t\twidth: '100%',\r\n\t\tplayerVars: {\r\n            'origin': 'http://localhost:8000',\r\n\t\t\t// https://developers.google.com/youtube/player_parameters\r\n\t\t\tautoplay: 1\r\n\t\t}\r\n    };\r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n    const youtubeUrl = \"http://www.youtube.com/watch?v=\";\r\n    return (\r\n        <div className='pop container'>\r\n            <CustomizedSnackbar open={openSnack} setOpen={setopenSnack} message='Movie added to favourites'/>\r\n            <div class=\"movie_card\" id=\"bright\">\r\n                <div class=\"info_section\">\r\n                    <div class=\"movie_header\">\r\n                        <img class=\"locandina\" src={`https://image.tmdb.org/t/p/original/${movie?.poster_path}`} />\r\n                        <h1>{movie.title || movie.name}</h1>\r\n                        <h4>{movie.release_date || movie.first_air_date}</h4>\r\n                        <span class=\"minutes\">{ifSeries ? `${movie.number_of_seasons} Season` : `${movie.runtime}min`}</span>\r\n                        <p class=\"type\">{genres.map((g) => `${g} `)}</p>\r\n                    </div>\r\n                    <div class=\"movie_desc\">\r\n                        <p class=\"text\">\r\n                            {truncate(movie.overview,350)}\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"movie_social\">\r\n                        <ul>\r\n                            {ifSeries ? (\r\n                                <li><i><a href={movie.homepage}><Button size=\"small\" variant=\"contained\" color=\"secondary\">Watch on Netflix</Button></a></i></li> \r\n                            ) : (\r\n                                <li><i><Button size=\"small\" onClick={() => setopen(!open)} variant=\"contained\" color=\"secondary\">Watch Trailer</Button></i></li> \r\n                            ) }\r\n                            {!ifSeries && \r\n                                (\r\n                            <li><i class=\"material-icons\"><Button size='small' variant=\"outlined\" color='primary' onClick={() => addFav(movie.title,movie.poster_path,movie.id)} >Add to Favourites</Button></i></li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div style={{backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundSize:\"cover\"}} class=\"blur_back bright_back\"></div>\r\n            </div>\r\n            {open && <ReactPlayer \r\n                        className=\"container-fluid\"\r\n                        url={youtubeUrl + moviVideo}\r\n                        playing\r\n                        width=\"100%\"\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pop\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\auth\\Auth.js",["190"],"import { Avatar, Button,Typography,Paper,Grid,Container,Alert} from '@material-ui/core'\r\nimport { LockOutlined } from '@material-ui/icons'\r\nimport React,{useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport FileBase from 'react-file-base64'\r\nimport Input from './Input'\r\nimport {Icon} from '@material-ui/core'\r\nimport {GoogleLogin} from 'react-google-login'\r\nimport { useDispatch } from 'react-redux'\r\nimport useStyles from './style'\r\nimport { toSignin, toSignup } from '../../actions/auth'\r\n\r\nconst intialState = {\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:'',\r\n    selectedFile:''\r\n}\r\nconst Auth = () => {\r\n    const [showPassword, setshowPassword] = useState(false)\r\n    const [isSignUp, setisSignUp] = useState(true)\r\n    const [userData, setuserData] = useState(intialState)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const handleShowPassword = () => setshowPassword((prevPass) => !prevPass)\r\n    const history = useHistory()\r\n    const switchMode = () => {\r\n        setisSignUp((st) => !st)\r\n        handleShowPassword(false)\r\n    }\r\n    const handleChange = (e) => {\r\n        setuserData({...userData,[e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(isSignUp) {\r\n            dispatch(toSignup(userData,history)).then((data) => {\r\n                if(data?.error){\r\n                    setuserData({success:false})\r\n                }else setuserData({success:true})\r\n            })\r\n        }\r\n        else {\r\n            dispatch(toSignin(userData,history)).then((data) => {\r\n                if(data?.error){\r\n                    setuserData({success:false})\r\n                }else setuserData({success:true})\r\n            })\r\n        }\r\n    }\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        try {\r\n            dispatch({type:\"AUTH\", data: {result,token} })\r\n            history.push(\"/\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const googleFailure = (error) => {\r\n        console.log(error)\r\n        console.log(\"Google sign in was unsuccessfull\")\r\n    }\r\n    const success = () => {\r\n        <div className='alert alert-danger' style={{display: success ? 'none' : \"\"}}>\r\n            Please try again\r\n        </div>\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {success()}\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography variant=\"h5\">{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            isSignUp && (\r\n                                <>\r\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half/>\r\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} autoFocus half/>\r\n\r\n                                </>\r\n                            )\r\n                        }\r\n                        <Input name=\"email\" label=\"Email Id\" type=\"email\" handleChange={handleChange} autoFocus/>\r\n                        <Input name=\"password\" label=\"Enter Password\" type={showPassword ? 'text' : 'password'} handleChange={handleChange} autoFocus handleShowPassword={handleShowPassword} />\r\n                        {\r\n                        isSignUp && <Input name=\"confirmPassword\" label=\"Confirm Password\" type=\"password\" handleChange={handleChange}/>\r\n                        }\r\n                        {isSignUp && \r\n                        <div className='mx-2 my-2'>\r\n                            <h6 >Choose Profile</h6>\r\n                            <FileBase\r\n                            type='file'\r\n                            multiple={false}\r\n                            onDone = {({base64}) => setuserData({...userData,selectedFile:base64}) }\r\n                            />\r\n                        </div>\r\n                        }\r\n                    </Grid>\r\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                        {isSignUp ? \"Sign Up\" : \"Sign In\"}\r\n                    </Button>\r\n                    <GoogleLogin\r\n                clientId=\"238956009379-namsn2njtahejf3l7qshmlg3j5dmrkc0.apps.googleusercontent.com\"\r\n                render={(renderProps) => (\r\n                    <Button\r\n                    className={classes.googleButton}\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={renderProps.onClick}\r\n                    disabled={renderProps.disabled}\r\n                    startIcon={<Icon/>}\r\n                    variant=\"contained\"\r\n                    >\r\n                    Google Sign In\r\n                    </Button>\r\n                )}\r\n                onSuccess={googleSuccess}\r\n                onFailure={googleFailure}\r\n                cookiePolicy=\"single_host_origin\"\r\n                />\r\n                </form>\r\n                <Grid item >\r\n                        <Button onClick={switchMode}>\r\n                            {\r\n                                isSignUp ? \"Already have an account?\" : \"Create an account?\"\r\n                            }\r\n                        </Button>\r\n                </Grid>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Auth","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\auth\\style.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\auth\\Input.js",["191"],"import { Grid,TextField,IconButton,InputAdornment } from '@material-ui/core'\r\nimport { Visibility,VisibilityOff, VisibilityOffOutlined} from '@material-ui/icons'\r\nimport React from 'react'\r\n\r\nfunction Input({half,name,handleChange,label,autoFocus,type,handleShowPassword}) {\r\n    return (\r\n        <Grid item xs={12} sm={half ? 6 : 12}>\r\n            <TextField\r\n            name={name}\r\n            onChange={handleChange}\r\n            required\r\n            fullWidth\r\n            label={label}\r\n            autoFocus={autoFocus}\r\n            type={type}\r\n            InputProps={name === \"password\"  ? {\r\n                endAdornment: (\r\n                    <InputAdornment>\r\n                        <IconButton onClick={handleShowPassword}>\r\n                            {type === 'password' ? <Visibility/> : <VisibilityOff/>}\r\n                        </IconButton>\r\n                    </InputAdornment>\r\n                )\r\n            } : null}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Input","E:\\project\\MERN\\movies suggestion\\client\\src\\actions\\auth.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\index.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\auth.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\post.js",["192"],"\r\nexport default (posts = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ALL':\r\n            return action.payload;\r\n        case 'DELETE':\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        case 'CREATE':\r\n            return [...posts, action.payload];\r\n        case 'UPDATE':\r\n            return posts.map(post => post._id === action.payload._id ? action.payload : post);\r\n        case 'UPDATE_LIKE':\r\n            return posts.map(post => post._id === action.payload._id ? action.payload : post);\r\n        case 'ADD_COMMENT':\r\n            return posts.map(post => post._id === action.payload._id ? action.payload : post);\r\n        default:\r\n            return posts;\r\n    }\r\n}","E:\\project\\MERN\\movies suggestion\\client\\src\\actions\\posts.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\Posts.js",["193","194"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {Typography,CircularProgress,Container,Divider} from '@material-ui/core'\r\nimport SinglePost from './SinglePost'\r\nimport { getPosts } from '../../../actions/posts'\r\nfunction Posts() {\r\n    const posts = useSelector((state) => state.posts)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n      dispatch(getPosts())\r\n    }, [])\r\n    // console.log(posts)\r\n    const sortedPost = posts.reverse()\r\n    console.log(sortedPost)\r\n    return (\r\n        <div className=\"post mt-3\">\r\n            <Typography variant='h6'>Recent Posts</Typography>\r\n            <Divider/>\r\n            {!posts.length ? <CircularProgress/> : (\r\n              <div>\r\n                {sortedPost.map((post) => (\r\n                  <Container className='row' >\r\n                    <SinglePost post={post} dlt={false}/>\r\n                  </Container>\r\n                ))}\r\n              </div>\r\n            )}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\SinglePost.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\Comments.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\Profile.js",["195","196"],"import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {Container,Grid} from '@material-ui/core'\r\nimport PInfo from './PInfo'\r\nimport PData from './PData'\r\nfunction Profile() {\r\n    return (\r\n        <Grid container justify=\"space-around\" alignItems=\"stretch\" spacing={2}>\r\n            <Grid item xs={12} sm={4}>\r\n                <PInfo/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n                <PData/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\PInfo.js",["197"],"import React from 'react'\r\nimport './Pinfo.css'\r\nimport { Avatar, Container, Typography } from '@material-ui/core'\r\nfunction PInfo() {\r\n    const {result} = JSON.parse(localStorage.getItem('profile'))\r\n    return (\r\n        <div className='profile'>\r\n            <Avatar  style={{height:'200px',width:'200px'}} src={result.selectedFile}></Avatar>\r\n            <Typography className='my-3' variant=\"h5\">{result.name}</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PInfo\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\PData.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\MyPosts.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Profile\\MyFavourites.js",["198","199","200"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport {Button, Grid} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport './Pinfo.css'\r\nimport Pop from '../Discover/Row/Pop/Pop'\r\nimport { dltmovie, getMovies } from '../../actions/favMovi'\r\nimport { dltFav } from '../../api/api'\r\nfunction MyFavourites() {\r\n    const [open, setopen] = useState(false)\r\n    const [mdata, setmdata] = useState([])\r\n    const [genre, setgenre] = useState([])\r\n    const user = JSON.parse(localStorage.getItem('profile'))\r\n    const dispatch = useDispatch()\r\n    const mUrl = 'https://image.tmdb.org/t/p/original/';\r\n    const API = '719944d4c67075197ac4549527bf9438';\r\n    useEffect(() => {\r\n        dispatch(getMovies())\r\n    }, [])\r\n    const favMovie = useSelector((state) => state.favMovie)\r\n    console.log(favMovie)\r\n    const showPop = async (id,gen) => {\r\n        setopen(!open)\r\n        setgenre(gen)\r\n        const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API}&language=en-US`)\r\n        setmdata(data)\r\n    }\r\n    const myMovies = favMovie.filter((movie) => movie.creator === user.result._id)\r\n    console.log(myMovies)\r\n    return (\r\n        <Grid container spacing={1} className='favCont'>\r\n            {\r\n                myMovies.map((m) => (\r\n                    <Grid item xs={10} sm={4} >\r\n                    <div onClick={() => showPop(m.movieId,m.movieGenre)} className='favItem'  style={{backgroundImage:`url(${mUrl}/${m.movieUrl})`,backgroundSize:'cover'}}>\r\n                    </div>\r\n                    <Button variant='outlined' className='mt-1 ml-6'  onClick={() => dispatch(dltmovie(m._id))} size='small'>Remove</Button>\r\n                    </Grid>\r\n                ))\r\n            }\r\n        {open && <Pop movie={mdata} genres={genre} />}\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MyFavourites\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\reducers\\favMovie.js",["201"],"export default (favMovie = [], action) => {\r\n    switch (action.type) {\r\n        case 'GET_MOVIE':\r\n            return action.payload;\r\n        case 'DLT_MOVIE':\r\n            return favMovie.filter((movie) => movie._id !== action.payload);\r\n        case 'POST_MOVIE':\r\n            return [...favMovie, action.payload];\r\n        default:\r\n            return favMovie;\r\n    }\r\n}","E:\\project\\MERN\\movies suggestion\\client\\src\\actions\\favMovi.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Banner\\Banner.js",["202"],"import React,{useState,useEffect} from 'react'\r\n\r\nimport './banner.css'\r\nimport { instance } from '../../../api/request';\r\nfunction Banner({fetchUrl}) {\r\n    const [movie, setMovie] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await instance.get(fetchUrl)\r\n\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length)\r\n            ])\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n    return (\r\n        <header className = \"banner\"\r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n            backgroundPosition: \"center center\"\r\n        }}\r\n    >\r\n\r\n        <div className = \"banner__contents\">\r\n            <h1 className = \"banner__title\">\r\n                {movie?.title || movie.name || movie?.orignal_name}\r\n            </h1>\r\n\r\n            <div className = \"banner__buttons\">\r\n                <a href='https://www.netflix.com/'> <button className=\"banner__button\" >Watch Now</button></a>\r\n                {/* <button className = \"banner__button\">My List</button> */}\r\n            </div>\r\n                <h1 className = \"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n        </div>\r\n        {/* <div className = \"banner__fadeBottom\" ></div> */}\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\Discover\\Genre Selector\\Genre.js",["203","204","205","206","207","208","209","210","211","212","213","214"],"import React, { useEffect, useState } from 'react'\r\nimport { Select, MenuItem, FormControl, InputLabel, Input } from '@material-ui/core'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Row from '../Row/Row';\r\nimport request, { instance } from '../../../api/request';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\nfunction Genre({ setgenreTitle, setopen }) {\r\n    const [genresName, setgenresName] = useState([])\r\n    const [genresMovie, setgenresMovie] = useState([])\r\n    useEffect(async () => {\r\n        const { data: { genres } } = await instance.get(request.fetchGenre)\r\n        console.log(genres)\r\n        setgenresName(genres)\r\n    }, [])\r\n\r\n    const handleGenreClick = (id,name) => {\r\n        const url = `/discover/movie?api_key=ce4ff5cff7053adedff9bb09f9ff4b23&with_genres=${id}`\r\n        setgenreTitle({\r\n            name:name,\r\n            url:url\r\n        })\r\n        setopen(st => !st)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='m-4'>\r\n            {genresName.map((item,index) => (\r\n                <li className=\"list-inline-item\" key={index}>\r\n                <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-info mt-3\"\r\n                onClick={() => {\r\n                handleGenreClick(item.id,item.name);\r\n                }}\r\n                >\r\n                {item.name}\r\n            </button>\r\n            </li>\r\n            ) )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Genre\r\n","E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Snackbar.js",[],"E:\\project\\MERN\\movies suggestion\\client\\src\\components\\home\\Posts..\\style.js",[],["215","216"],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"225","line":3,"column":9,"nodeType":"223","messageId":"224","endLine":3,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":3,"column":19,"nodeType":"223","messageId":"224","endLine":3,"endColumn":23},{"ruleId":"221","severity":1,"message":"222","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"227","line":2,"column":9,"nodeType":"223","messageId":"224","endLine":2,"endColumn":13},{"ruleId":"221","severity":1,"message":"228","line":2,"column":14,"nodeType":"223","messageId":"224","endLine":2,"endColumn":20},{"ruleId":"221","severity":1,"message":"229","line":2,"column":41,"nodeType":"223","messageId":"224","endLine":2,"endColumn":51},{"ruleId":"221","severity":1,"message":"230","line":2,"column":52,"nodeType":"223","messageId":"224","endLine":2,"endColumn":63},{"ruleId":"221","severity":1,"message":"231","line":2,"column":64,"nodeType":"223","messageId":"224","endLine":2,"endColumn":74},{"ruleId":"221","severity":1,"message":"232","line":2,"column":75,"nodeType":"223","messageId":"224","endLine":2,"endColumn":84},{"ruleId":"221","severity":1,"message":"233","line":2,"column":85,"nodeType":"223","messageId":"224","endLine":2,"endColumn":96},{"ruleId":"221","severity":1,"message":"234","line":2,"column":97,"nodeType":"223","messageId":"224","endLine":2,"endColumn":107},{"ruleId":"221","severity":1,"message":"235","line":2,"column":108,"nodeType":"223","messageId":"224","endLine":2,"endColumn":117},{"ruleId":"221","severity":1,"message":"236","line":2,"column":118,"nodeType":"223","messageId":"224","endLine":2,"endColumn":132},{"ruleId":"221","severity":1,"message":"237","line":2,"column":133,"nodeType":"223","messageId":"224","endLine":2,"endColumn":138},{"ruleId":"221","severity":1,"message":"238","line":2,"column":139,"nodeType":"223","messageId":"224","endLine":2,"endColumn":147},{"ruleId":"221","severity":1,"message":"239","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":20},{"ruleId":"221","severity":1,"message":"240","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":16},{"ruleId":"221","severity":1,"message":"241","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":12},{"ruleId":"221","severity":1,"message":"234","line":9,"column":33,"nodeType":"223","messageId":"224","endLine":9,"endColumn":43},{"ruleId":"221","severity":1,"message":"242","line":12,"column":12,"nodeType":"223","messageId":"224","endLine":12,"endColumn":17},{"ruleId":"221","severity":1,"message":"243","line":12,"column":19,"nodeType":"223","messageId":"224","endLine":12,"endColumn":27},{"ruleId":"221","severity":1,"message":"244","line":14,"column":11,"nodeType":"223","messageId":"224","endLine":14,"endColumn":14},{"ruleId":"221","severity":1,"message":"245","line":18,"column":11,"nodeType":"223","messageId":"224","endLine":18,"endColumn":23},{"ruleId":"221","severity":1,"message":"246","line":50,"column":11,"nodeType":"223","messageId":"224","endLine":50,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":66,"column":8,"nodeType":"249","endLine":66,"endColumn":18,"suggestions":"250"},{"ruleId":"221","severity":1,"message":"251","line":4,"column":26,"nodeType":"223","messageId":"224","endLine":4,"endColumn":32},{"ruleId":"247","severity":1,"message":"252","line":28,"column":9,"nodeType":"249","endLine":28,"endColumn":19,"suggestions":"253"},{"ruleId":"221","severity":1,"message":"254","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"255","line":2,"column":44,"nodeType":"223","messageId":"224","endLine":2,"endColumn":52},{"ruleId":"221","severity":1,"message":"256","line":3,"column":23,"nodeType":"223","messageId":"224","endLine":3,"endColumn":34},{"ruleId":"221","severity":1,"message":"257","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":15},{"ruleId":"221","severity":1,"message":"258","line":8,"column":28,"nodeType":"223","messageId":"224","endLine":8,"endColumn":36},{"ruleId":"221","severity":1,"message":"259","line":22,"column":11,"nodeType":"223","messageId":"224","endLine":22,"endColumn":15},{"ruleId":"221","severity":1,"message":"260","line":34,"column":11,"nodeType":"223","messageId":"224","endLine":34,"endColumn":15},{"ruleId":"261","severity":1,"message":"262","line":53,"column":25,"nodeType":"263","endLine":53,"endColumn":116},{"ruleId":"221","severity":1,"message":"264","line":1,"column":57,"nodeType":"223","messageId":"224","endLine":1,"endColumn":62},{"ruleId":"221","severity":1,"message":"265","line":2,"column":36,"nodeType":"223","messageId":"224","endLine":2,"endColumn":57},{"ruleId":"266","severity":1,"message":"267","line":2,"column":1,"nodeType":"268","endLine":19,"endColumn":2},{"ruleId":"221","severity":1,"message":"222","line":1,"column":28,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"269","line":11,"column":8,"nodeType":"249","endLine":11,"endColumn":10,"suggestions":"270"},{"ruleId":"221","severity":1,"message":"256","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":21},{"ruleId":"221","severity":1,"message":"225","line":3,"column":9,"nodeType":"223","messageId":"224","endLine":3,"endColumn":18},{"ruleId":"221","severity":1,"message":"225","line":3,"column":18,"nodeType":"223","messageId":"224","endLine":3,"endColumn":27},{"ruleId":"221","severity":1,"message":"271","line":5,"column":9,"nodeType":"223","messageId":"224","endLine":5,"endColumn":15},{"ruleId":"221","severity":1,"message":"272","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":16},{"ruleId":"247","severity":1,"message":"269","line":20,"column":8,"nodeType":"249","endLine":20,"endColumn":10,"suggestions":"273"},{"ruleId":"266","severity":1,"message":"267","line":1,"column":1,"nodeType":"268","endLine":12,"endColumn":2},{"ruleId":"247","severity":1,"message":"274","line":18,"column":7,"nodeType":"249","endLine":18,"endColumn":9,"suggestions":"275"},{"ruleId":"221","severity":1,"message":"276","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":16},{"ruleId":"221","severity":1,"message":"277","line":2,"column":18,"nodeType":"223","messageId":"224","endLine":2,"endColumn":26},{"ruleId":"221","severity":1,"message":"278","line":2,"column":28,"nodeType":"223","messageId":"224","endLine":2,"endColumn":39},{"ruleId":"221","severity":1,"message":"279","line":2,"column":41,"nodeType":"223","messageId":"224","endLine":2,"endColumn":51},{"ruleId":"221","severity":1,"message":"280","line":2,"column":53,"nodeType":"223","messageId":"224","endLine":2,"endColumn":58},{"ruleId":"221","severity":1,"message":"281","line":3,"column":22,"nodeType":"223","messageId":"224","endLine":3,"endColumn":30},{"ruleId":"221","severity":1,"message":"282","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":11},{"ruleId":"221","severity":1,"message":"283","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":13},{"ruleId":"221","severity":1,"message":"246","line":8,"column":7,"nodeType":"223","messageId":"224","endLine":8,"endColumn":16},{"ruleId":"221","severity":1,"message":"284","line":26,"column":12,"nodeType":"223","messageId":"224","endLine":26,"endColumn":23},{"ruleId":"221","severity":1,"message":"285","line":26,"column":25,"nodeType":"223","messageId":"224","endLine":26,"endColumn":39},{"ruleId":"247","severity":1,"message":"286","line":27,"column":15,"nodeType":"287","endLine":31,"endColumn":6},{"ruleId":"217","replacedBy":"288"},{"ruleId":"219","replacedBy":"289"},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Grid' is defined but never used.","'Card' is defined but never used.","'Avatar' is defined but never used.","'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'IconButton' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'Paper' is defined but never used.","'Collapse' is defined but never used.","'makeStyles' is defined but never used.","'Search' is defined but never used.","'logo' is defined but never used.","'query' is assigned a value but never used.","'setquery' is assigned a value but never used.","'API' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","'useStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["292"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array. You can also do a functional update 'setloading(l => ...)' if you only need 'loading' in the 'setloading' call.",["293"],"'useEffect' is defined but never used.","'Snackbar' is defined but never used.","'useSelector' is defined but never used.","'Youtube' is defined but never used.","'instance' is defined but never used.","'user' is assigned a value but never used.","'opts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Alert' is defined but never used.","'VisibilityOffOutlined' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["294"],"'Delete' is defined but never used.","'dltFav' is defined but never used.",["295"],"React Hook useEffect has a missing dependency: 'fetchUrl'. Either include it or remove the dependency array.",["296"],"'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'useTheme' is defined but never used.","'Row' is defined but never used.","'axios' is defined but never used.","'genresMovie' is assigned a value but never used.","'setgenresMovie' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["290"],["291"],"no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"301","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"306","text":"307"},"Update the dependencies array to be: [fetchUrl, loading]",{"range":"308","text":"309"},"Update the dependencies array to be: [dispatch]",{"range":"310","text":"311"},{"range":"312","text":"311"},"Update the dependencies array to be: [fetchUrl]",{"range":"313","text":"314"},[2333,2343],"[location, logout, user?.token]",[1099,1109],"[fetchUrl, loading]",[447,449],"[dispatch]",[822,824],[526,528],"[fetchUrl]"]